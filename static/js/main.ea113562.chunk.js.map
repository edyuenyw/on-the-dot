{"version":3,"sources":["components/ActivitiesSearch.js","components/Activities.js","components/TasksSearch.js","components/Tasks.js","components/activitiesData.js","components/tasksData.js","components/App.js","reportWebVitals.js","index.js"],"names":["ActivitiesSearch","props","useState","searchText","setSearchText","history","useHistory","className","onSubmit","ev","preventDefault","push","type","onChange","target","value","placeholder","google","window","Activities","activities","setActivities","params","useParams","useEffect","searchTerm","toLowerCase","activity","filter","a","activityName","includes","length","map","obj","tasksDates","tasks","t","date","dateId","calculateMinutes","reduce","prev","curr","duration","durationMinutes","toMinutes","Number","arriveBy","split","Math","round","hour","floor","minutes","departBy","performSearch","query","minDate","today","Date","dd","getDate","mm","getMonth","getFullYear","find","d","alert","maps","DistanceMatrixService","getDistanceMatrix","origins","addressFrom","destinations","addressTo","region","travelMode","TravelMode","DRIVING","response","status","DistanceMatrixStatus","OK","console","log","rows","elements","theData","originAddresses","destinationAddresses","name","min","defaultValue","to","TasksSearch","results","setResults","task","id","Tasks","setTasks","taskResults","taskName","isNaN","parseInt","now","deleted","onClick","taskId","activitiesData","tasksData","PageNotFound","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea113562.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction ActivitiesSearch( props ){\r\n\r\n  const [ searchText, setSearchText ] = useState( '' );\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (ev) => {\r\n    // console.log(\"ActivitiesSearch.handleSubmit() clicked: \", searchText);\r\n    ev.preventDefault();\r\n    history.push(`activities/search/${ searchText }`);\r\n  };\r\n\r\n  const handleChange = (ev) => {\r\n    // console.log(\"ActivitiesSearch.handleChange() clicked.\");\r\n    setSearchText( ev.target.value );\r\n  };\r\n\r\n  return(\r\n    <div className=\"activities-search\">\r\n      <h3>Activities</h3>\r\n      <form onSubmit={ handleSubmit } >\r\n        <input type=\"text\" onChange={ handleChange } placeholder=\"Search activities\"/>\r\n        <button>Search</button>\r\n      </form>\r\n    </div>\r\n  ) // return\r\n} // ActivitiesSearch\r\n\r\nexport default ActivitiesSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst google = window.google;\r\n\r\nfunction Activities( props ) {\r\n\r\n  const [ activities, setActivities ] = useState( [] );\r\n  const params = useParams();\r\n\r\n  function performSearch( searchText ) {\r\n    // console.log(\"performSearch: \", props.activities);\r\n    const searchTerm = searchText.toLowerCase();\r\n\r\n    const searchResults = () => {\r\n      const activity = props.activities.filter( a => a.activityName.toLowerCase().includes(searchTerm) );\r\n      if ( activity.length > 0 ){\r\n        // console.log(\"activity: \", activity);\r\n\r\n        // Sum tasks durations per activity\r\n        activity.map( obj => {\r\n          // console.log(\"props.tasks.filter( t => t.date === obj.dateId ): \", props.tasks.filter( t => t.date === obj.dateId ));\r\n          const tasksDates = props.tasks.filter( t => t.date === obj.dateId && t.activityName.toLowerCase() === searchTerm );\r\n\r\n          if ( tasksDates.length > 0 ){\r\n            // console.log(\"tasksDates: \", tasksDates);\r\n            const calculateMinutes = tasksDates.reduce( (prev, curr) => prev + curr.duration, 0 ); // need to do something here\r\n            const durationMinutes = calculateMinutes < 0 ? 0 : calculateMinutes;\r\n            // console.log(\"durationMinutes: \", durationMinutes, \" and activity.duration: \", ( Math.round( obj.duration / 60 ) ) );\r\n\r\n            const toMinutes = ( Number( obj.arriveBy.split(':')[0] ) * 60 ) +\r\n              Number( obj.arriveBy.split(':')[1] ) -\r\n              ( Math.round( obj.duration / 60 ) ) - durationMinutes ;\r\n\r\n            const hour = Math.floor( toMinutes / 60 );\r\n            const minutes = toMinutes % 60 < 10 ? `0${toMinutes % 60}` : toMinutes % 60;\r\n            obj.departBy = `${hour}:${minutes}`;\r\n          }\r\n        });\r\n      }\r\n      return activity;\r\n    }\r\n\r\n    setActivities( searchResults );\r\n  };\r\n\r\n  useEffect( () => {\r\n    // console.log(\"Activities.useEffect() is running: \", props);\r\n    performSearch( params.query );\r\n  }, [ params.query ] );\r\n\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    // console.log(\"Activities.handleSubmit() clicked.\");\r\n    // console.log(\"input arrive time: \", ev.target.arriveBy.value);\r\n\r\n    if ( props.activities.find( d => d.dateId === ev.target.dateId.value &&\r\n        d.activityName.toLowerCase() === ev.target.activityName.value.toLowerCase() ) ){\r\n      alert(\"Same activity was found\");\r\n      return;\r\n    }\r\n\r\n    const service = new google.maps.DistanceMatrixService();\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [ ev.target.addressFrom.value ],\r\n        destinations: [ ev.target.addressTo.value ],\r\n        region: \"AU\",\r\n        travelMode: google.maps.TravelMode.DRIVING\r\n      },\r\n      function( response, status ){\r\n        if (status !== google.maps.DistanceMatrixStatus.OK) {\r\n          alert('Error was: ' + status);\r\n        } else {\r\n          console.log( response );\r\n\r\n          const toMinutes = (Number(ev.target.arriveBy.value.split(':')[0]) * 60) +\r\n                            Number(ev.target.arriveBy.value.split(':')[1]) -\r\n                            Math.round( response.rows[0].elements[0].duration.value / 60 );\r\n          const hour = Math.floor( toMinutes / 60 );\r\n          const minutes = toMinutes % 60;\r\n\r\n          const theData = {\r\n            dateId: ev.target.dateId.value,\r\n            activityName: ev.target.activityName.value,\r\n            addressFrom: response.originAddresses[0].split(',')[0],\r\n            addressTo: response.destinationAddresses[0].split(',')[0],\r\n            arriveBy: ev.target.arriveBy.value,\r\n            departBy: `${hour}:${minutes}`,\r\n            duration: response.rows[0].elements[0].duration.value\r\n          };\r\n\r\n          props.setActivities([ ...props.activities, theData ]);\r\n          setActivities([ ...activities, theData ]);\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  const minDate = () => {\r\n    let today = new Date();\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth()+1;\r\n    let yyyy = today.getFullYear();\r\n\r\n    dd = dd<10 ? '0'+dd : dd;\r\n    mm = mm<10 ? '0'+mm : mm;\r\n\r\n    return today = yyyy + '-' + mm + '-' + dd;\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"search-results\">\r\n        <form onSubmit={ handleSubmit } >\r\n          <input type=\"date\" name=\"dateId\" min={ minDate() } defaultValue={ minDate() } />\r\n          <input type=\"time\" name=\"arriveBy\" placeholder=\"Arrive By (hhmm)\" />\r\n          <input type=\"text\" name=\"activityName\" placeholder=\"Activity\" />\r\n          <input type=\"text\" name=\"addressFrom\" placeholder=\"Address From\" />\r\n          <input type=\"text\" name=\"addressTo\" placeholder=\"Address To\" />\r\n          <button>New</button>\r\n        </form>\r\n      </div>\r\n\r\n          <ul className=\"row\">\r\n          {\r\n            activities.length > 0\r\n            &&\r\n            activities.map( activity =>\r\n\r\n              <li key={ activity.dateId + activity.activityName }   >\r\n                <Link to={`/activities/search/${ activity.activityName.toLowerCase() }/${ activity.dateId }`} >\r\n                  <div className=\"activities-card\">\r\n                    <label className=\"txt-label\">\r\n                      { activity.dateId }\r\n                    </label>\r\n\r\n                    <label className=\"txt-label-title\">\r\n                      { activity.activityName }\r\n                    </label>\r\n\r\n                    <div className=\"txt-label\">\r\n                      <label>\r\n                        Depart: { activity.departBy }\r\n                      </label>\r\n                      <label>\r\n                        Arrive: { activity.arriveBy }\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n\r\n            )\r\n          }\r\n          </ul>\r\n\r\n\r\n    </div>\r\n  ) // return\r\n}; // Activities\r\n\r\nexport default Activities;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction TasksSearch( props ){\r\n\r\n  const [ searchText, setSearchText ] = useState( '' );\r\n  const [ results, setResults ] = useState( {} );\r\n\r\n  useEffect( () => {\r\n\r\n    const searchTerm = searchText.toLowerCase();\r\n    const results = props.tasks.filter(\r\n      task => task.name.toLowerCase().includes( searchTerm )\r\n    );\r\n\r\n    setResults( results );\r\n  }, [ searchText ] );\r\n\r\n  const handleChange = (ev) => {\r\n    setSearchText( ev.target.value );\r\n  };\r\n\r\n  return(\r\n    <div className=\"tasks-search\" >\r\n      <h3>Tasks</h3>\r\n      <input type=\"text\" onChange={ handleChange } placeholder=\"Search tasks\"/>\r\n\r\n    <ul className=\"row\">\r\n      {\r\n        results.length > 0\r\n        &&\r\n        results.map( ( task ) =>\r\n        <li className=\"tasks-card\" key={ task.id } >\r\n          <div>\r\n            <div className=\"txt-label\">\r\n            <label>\r\n              { task.date }\r\n            </label>\r\n            <label>\r\n              { task.activityName }\r\n            </label>\r\n            </div>\r\n\r\n            <div className=\"tasks-title\">\r\n              { task.name }\r\n            </div>\r\n            <div className=\"txt-label\">\r\n              Duration: { task.duration } minutes\r\n            </div>\r\n          </div>\r\n        </li>\r\n        )\r\n      }\r\n    </ul>\r\n\r\n    </div>\r\n  ) // return\r\n} // TasksSearch\r\n\r\nexport default TasksSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Tasks( props ) {\r\n\r\n  const [ tasks, setTasks ] = useState( [] );\r\n  const params = useParams();\r\n\r\n  useEffect( () => {\r\n\r\n    const taskResults = props.tasks.filter(\r\n      task => task.date === params.dateId\r\n    );\r\n\r\n    setTasks( taskResults );\r\n  }, [ params.dateId ] );\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    // console.log( \"Tasks.handleSubmit() clicked\" );\r\n\r\n    if ( ev.target.taskName.value.length > 0 && !isNaN( parseInt( ev.target.duration.value ) ) ) {\r\n      console.log(\"adding new tasks\");\r\n      const theData = {\r\n        id: Date.now(),\r\n        activityName: params.query,\r\n        date: params.dateId,\r\n        name: ev.target.taskName.value,\r\n        duration: parseInt(ev.target.duration.value),\r\n        deleted: false\r\n      }\r\n      props.setTasks([ ...props.tasks, theData ]);\r\n      setTasks([ ...tasks, theData ]);\r\n    }\r\n\r\n  };\r\n\r\n  const handleDelete = ( taskId ) => {\r\n    // array of the task selected\r\n    // mutable\r\n    props.tasks.map( task => {\r\n        // console.log(\"task.id == taskId: \", task.id, \":\", task.id === taskId);\r\n        if ( task.id === taskId ){\r\n          task.deleted = !task.deleted;\r\n          task.duration = task.duration * -1;\r\n        }\r\n      } );\r\n\r\n    setTasks( props.tasks.filter( task => task.date === params.dateId ) );\r\n\r\n  };\r\n\r\n  return(\r\n    <div>\r\n    <div className=\"search-results\">\r\n      <label>\r\n        { params.dateId }\r\n        &nbsp;\r\n        { params.query }\r\n      </label>\r\n\r\n      <form onSubmit={ handleSubmit } >\r\n        <input type=\"text\" name=\"taskName\" placeholder=\"Task\" />\r\n        &nbsp;\r\n        <input type=\"text\" name=\"duration\" placeholder=\"Duration in mins\" />\r\n        <button>New</button>\r\n      </form>\r\n      </div>\r\n\r\n      <ul className=\"row\">\r\n      {\r\n        tasks.length > 0\r\n        &&\r\n        tasks.map( (task) =>\r\n          <li className=\"tasks-card\" key={ task.id } >\r\n            <div className=\"tasks-labels\">\r\n              <div className=\"tasks-title\">\r\n                { task.name }\r\n              </div>\r\n\r\n              <div className=\"txt-label\">\r\n                Duration: { task.duration } minutes\r\n                <button onClick={ () => handleDelete(task.id) }>{ task.deleted ? \"+\" : \"-\" }</button>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        )\r\n      }\r\n      </ul>\r\n\r\n    </div>\r\n  ) // return\r\n}; // Tasks\r\n\r\nexport default Tasks;\r\n\r\n\r\n// TODO: Task deletion. flag only and recalculate in Activities. Then do styling on deleted/flagged styling. Also change the button + -\r\n","const activitiesData = [\r\n  {\r\n    dateId: '2021-09-20',\r\n    activityName: \"Work\",\r\n    addressFrom: \"Laverton\",\r\n    addressTo: \"Flinders Street Railway Station\",\r\n    departBy: \"8:00\",\r\n    arriveBy: \"9:00\",\r\n    duration: 1234    // seconds\r\n  },\r\n  {\r\n    dateId: '2021-09-25',\r\n    activityName: \"Picnic\",\r\n    addressFrom: \"Laverton\",\r\n    addressTo: \"Wyndham Park\",\r\n    departBy: \"8:00\",\r\n    arriveBy: \"9:00\",\r\n    duration: 1234    // seconds\r\n  }\r\n];\r\n\r\nexport default activitiesData;\r\n","const tasksData = [\r\n  {\r\n    id: 0,\r\n    activityName: \"work\",\r\n    date: \"2021-09-20\",\r\n    name: \"Coffee\",\r\n    duration: 5,\r\n    deleted: false\r\n  },\r\n  {\r\n    id: 1,\r\n    activityName: \"work\",\r\n    date: \"2021-09-20\",\r\n    name: \"Send kid to school\",\r\n    duration: 15,\r\n    deleted: false\r\n  },\r\n  {\r\n    id: 2,\r\n    activityName: \"picnic\",\r\n    date: \"2021-09-26\",\r\n    name: \"Prepare food\",\r\n    duration: 30,\r\n    deleted: false\r\n  }\r\n];\r\n\r\nexport default tasksData;\r\n","import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { useState } from 'react';\n\n// import Home from './Home';\nimport ActivitiesSearch from './ActivitiesSearch';\nimport Activities from './Activities';\nimport TasksSearch from './TasksSearch';\nimport Tasks from './Tasks';\n// import Distance from './Distance';\n\nimport './App.css';\n\nimport activitiesData from './activitiesData';\nimport tasksData from './tasksData';\n\nfunction PageNotFound (props) {\n  return (\n    <div>\n      <h2>Sorry, the page you requested was not found.</h2>\n      Go back to <Link to=\"/\">the home page</Link>\n    </div>\n  )\n}\n\nfunction App() {\n\n  const [ activities, setActivities ] = useState( activitiesData );\n  const [ tasks, setTasks ] = useState( tasksData );\n\n  return (\n\n    <div className=\"App\">\n      <Router basename={ process.env.PUBLIC_URL }>\n        <nav className=\"navbar\">\n          <div className=\"App-logo\">on-the-dot...</div>\n            <ul className=\"nav-link\">\n              <div className=\"menu\">\n                  <li><Link to=\"/\">Home</Link></li>\n                  <li><Link to=\"/activities\">Activities</Link></li>\n                  <li><Link to=\"/tasks\">Tasks</Link></li>\n              </div>\n            </ul>\n\n        </nav>\n\n        <Switch>\n\n          <Route exact path=\"/\"/>\n          <Route exact path=\"/activities\" component={ ActivitiesSearch } />\n          <Route exact path=\"/activities/search/:query\" >\n            <Activities\n              activities={ activities }\n              setActivities={ setActivities }\n              tasks={ tasks }\n            />\n          </Route>\n\n          <Route exact path=\"/tasks\">\n            <TasksSearch\n              tasks={ tasks }\n            />\n          </Route>\n\n          <Route exact path=\"/activities/search/:query/:dateId\">\n            <Tasks\n              tasks={ tasks }\n              setTasks={ setTasks }\n            />\n          </Route>\n\n          <Route path=\"*\" component={ PageNotFound } />\n\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\n// TODO:\n&nbsp; | &nbsp;\n<Link to=\"/distance\">Distance</Link>\n  </Route>\n  <Route exact path=\"/distance\" component={ Distance } />\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/*\n\n*/\n"],"sourceRoot":""}