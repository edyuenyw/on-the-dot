{"version":3,"sources":["components/ActivitiesSearch.js","components/Activities.js","components/TasksSearch.js","components/Tasks.js","components/activitiesData.js","components/tasksData.js","components/App.js","reportWebVitals.js","index.js"],"names":["ActivitiesSearch","props","useState","searchText","setSearchText","history","useHistory","className","onSubmit","ev","preventDefault","push","type","onChange","target","value","placeholder","google","window","Activities","activities","setActivities","errors","setErrors","errorExists","setErrorExists","params","useParams","useEffect","searchTerm","toLowerCase","activity","filter","a","activityName","includes","length","map","obj","tasksDates","tasks","t","date","dateId","calculateMinutes","reduce","prev","curr","duration","durationMinutes","toMinutes","Number","arriveBy","split","Math","round","hour","floor","minutes","departBy","performSearch","query","minDate","today","Date","dd","getDate","mm","getMonth","getFullYear","error","index","console","log","errorFields","addressFrom","addressTo","find","d","maps","DistanceMatrixService","getDistanceMatrix","origins","destinations","region","travelMode","TravelMode","DRIVING","response","status","DistanceMatrixStatus","OK","alert","rows","elements","theData","originAddresses","destinationAddresses","handleSubmit","name","min","defaultValue","to","TasksSearch","results","setResults","task","id","Tasks","setTasks","taskResults","taskName","isNaN","parseInt","now","deleted","onClick","taskId","activitiesData","tasksData","PageNotFound","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6aa4a28.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction ActivitiesSearch( props ){\r\n\r\n  const [ searchText, setSearchText ] = useState( '' );\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (ev) => {\r\n    // console.log(\"ActivitiesSearch.handleSubmit() clicked: \", searchText);\r\n    ev.preventDefault();\r\n    history.push(`activities/search/${ searchText }`);\r\n  };\r\n\r\n  const handleChange = (ev) => {\r\n    // console.log(\"ActivitiesSearch.handleChange() clicked.\");\r\n    setSearchText( ev.target.value );\r\n  };\r\n\r\n  return(\r\n    <div className=\"activities-search\">\r\n      <h3>Activities</h3>\r\n      <form onSubmit={ handleSubmit } >\r\n        <input type=\"text\" onChange={ handleChange } placeholder=\"Search activities\"/>\r\n        <button>Search</button>\r\n      </form>\r\n    </div>\r\n  ) // return\r\n} // ActivitiesSearch\r\n\r\nexport default ActivitiesSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst google = window.google;\r\n\r\nfunction Activities( props ) {\r\n\r\n  const [ activities, setActivities ] = useState( [] );\r\n  const [ errors, setErrors ] = useState( {} );\r\n  const [ errorExists, setErrorExists ] = useState( \"\" );\r\n\r\n  const params = useParams();\r\n\r\n  function performSearch( searchText ) {\r\n    // console.log(\"performSearch: \", props.activities);\r\n    const searchTerm = searchText.toLowerCase();\r\n\r\n    const searchResults = () => {\r\n      const activity = props.activities.filter( a => a.activityName.toLowerCase().includes(searchTerm) );\r\n      if ( activity.length > 0 ){\r\n        // console.log(\"activity: \", activity);\r\n\r\n        // Sum tasks durations per activity\r\n        activity.map( obj => {\r\n          // console.log(\"props.tasks.filter( t => t.date === obj.dateId ): \", props.tasks.filter( t => t.date === obj.dateId ));\r\n          const tasksDates = props.tasks.filter( t => t.date === obj.dateId && t.activityName.toLowerCase() === searchTerm );\r\n\r\n          if ( tasksDates.length > 0 ){\r\n            // console.log(\"tasksDates: \", tasksDates);\r\n            const calculateMinutes = tasksDates.reduce( (prev, curr) => prev + curr.duration, 0 ); // need to do something here\r\n            const durationMinutes = calculateMinutes < 0 ? 0 : calculateMinutes;\r\n            // console.log(\"durationMinutes: \", durationMinutes, \" and activity.duration: \", ( Math.round( obj.duration / 60 ) ) );\r\n\r\n            const toMinutes = ( Number( obj.arriveBy.split(':')[0] ) * 60 ) +\r\n              Number( obj.arriveBy.split(':')[1] ) -\r\n              ( Math.round( obj.duration / 60 ) ) - durationMinutes ;\r\n\r\n            const hour = Math.floor( toMinutes / 60 );\r\n            const minutes = toMinutes % 60 < 10 ? `0${toMinutes % 60}` : toMinutes % 60;\r\n            obj.departBy = `${hour}:${minutes}`;\r\n          }\r\n        });\r\n      }\r\n      return activity;\r\n    }\r\n\r\n    setActivities( searchResults );\r\n  };\r\n\r\n  useEffect( () => {\r\n    // console.log(\"Activities.useEffect() is running: \", props);\r\n    setErrors({});\r\n    setErrorExists(\"\");\r\n    performSearch( params.query );\r\n\r\n  }, [ params.query ] );\r\n\r\n\r\n  const handleSubmit = (ev) => {\r\n    // ev.preventDefault();\r\n    // console.log(\"Activities.handleSubmit() clicked.\");\r\n    // console.log(\"input arrive time: \", ev.target.arriveBy.value);\r\n\r\n    console.log(\"handleSubmit errors: \", errors);\r\n\r\n    const service = new google.maps.DistanceMatrixService();\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [ ev.target.addressFrom.value ],\r\n        destinations: [ ev.target.addressTo.value ],\r\n        region: \"AU\",\r\n        travelMode: google.maps.TravelMode.DRIVING\r\n      },\r\n      function( response, status ){\r\n        if (status !== google.maps.DistanceMatrixStatus.OK) {\r\n          alert('Error was: ' + status);\r\n        } else {\r\n          console.log( response );\r\n\r\n          const toMinutes = (Number(ev.target.arriveBy.value.split(':')[0]) * 60) +\r\n                            Number(ev.target.arriveBy.value.split(':')[1]) -\r\n                            Math.round( response.rows[0].elements[0].duration.value / 60 );\r\n          const hour = Math.floor( toMinutes / 60 );\r\n          const minutes = toMinutes % 60;\r\n\r\n          const theData = {\r\n            dateId: ev.target.dateId.value,\r\n            activityName: ev.target.activityName.value,\r\n            addressFrom: response.originAddresses[0].split(',')[0],\r\n            addressTo: response.destinationAddresses[0].split(',')[0],\r\n            arriveBy: ev.target.arriveBy.value,\r\n            departBy: `${hour}:${minutes}`,\r\n            duration: response.rows[0].elements[0].duration.value\r\n          };\r\n\r\n          props.setActivities([ ...props.activities, theData ]);\r\n          setActivities([ ...activities, theData ]);\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  const minDate = () => {\r\n    let today = new Date();\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth()+1;\r\n    let yyyy = today.getFullYear();\r\n\r\n    dd = dd<10 ? '0'+dd : dd;\r\n    mm = mm<10 ? '0'+mm : mm;\r\n\r\n    return today = yyyy + '-' + mm + '-' + dd;\r\n  };\r\n\r\n  const handleValidationSubmit = (ev) => {\r\n    console.log(\"ev: \", ev);\r\n    ev.preventDefault();\r\n\r\n    let errorFields = [];\r\n    if ( ev.target.activityName.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Activity\"]\r\n    }\r\n\r\n    if ( ev.target.arriveBy.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Arrival Time\"]\r\n    }\r\n\r\n    if ( ev.target.addressFrom.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Address From\"]\r\n    }\r\n\r\n    if ( ev.target.addressTo.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Address To\"]\r\n    }\r\n\r\n    setErrors( errorFields );\r\n\r\n    console.log(\"errorFields: \", errorFields);\r\n\r\n    if ( errorFields.length > 0 ){\r\n      setErrorExists( \"Missing required fields\" );\r\n    } else {\r\n      if ( props.activities.find( d => d.dateId === ev.target.dateId.value &&\r\n        d.activityName.toLowerCase() === ev.target.activityName.value.toLowerCase() ) ){\r\n          setErrorExists( \"Activity exists\" );\r\n          // alert(\"Same activity was found\");\r\n          // return;\r\n        } else{\r\n          setErrorExists( \"\" );\r\n          handleSubmit( ev );\r\n        }\r\n      }\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"search-results-invalid\">\r\n        {\r\n          errorExists.length > 0\r\n          &&\r\n          <p>{ errorExists }:</p>\r\n        }\r\n        <ul>\r\n        {\r\n          errors.length > 0\r\n          &&\r\n            errors.map( (error, index ) =>\r\n              <li key={ index }>{ error }</li>\r\n            )\r\n        }\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n\r\n        <form onSubmit={ handleValidationSubmit } >\r\n          <input type=\"date\" name=\"dateId\" min={ minDate() } defaultValue={ minDate() } />\r\n          <input type=\"time\" name=\"arriveBy\" placeholder=\"Arrive By (hhmm)\" />\r\n          <input type=\"text\" name=\"activityName\" placeholder=\"Activity\" />\r\n          <input type=\"text\" name=\"addressFrom\" placeholder=\"Address From\" />\r\n          <input type=\"text\" name=\"addressTo\" placeholder=\"Address To\" />\r\n          <button>New</button>\r\n        </form>\r\n      </div>\r\n\r\n          <ul className=\"row\">\r\n          {\r\n            activities.length > 0\r\n            &&\r\n            activities.map( activity =>\r\n\r\n              <li key={ activity.dateId + activity.activityName }   >\r\n                <Link to={`/activities/search/${ activity.activityName.toLowerCase() }/${ activity.dateId }`} >\r\n                  <div className=\"activities-card\">\r\n                    <label className=\"txt-label\">\r\n                      { activity.dateId }\r\n                    </label>\r\n\r\n                    <label className=\"txt-label-title\">\r\n                      { activity.activityName }\r\n                    </label>\r\n\r\n                    <div className=\"txt-label\">\r\n                      <label>\r\n                        Depart: { activity.departBy }\r\n                      </label>\r\n                      <label>\r\n                        Arrive: { activity.arriveBy }\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n\r\n            )\r\n          }\r\n          </ul>\r\n\r\n\r\n    </div>\r\n  ) // return\r\n}; // Activities\r\n\r\nexport default Activities;\r\n\r\n/*\r\n<span style={{ color: \"red\" }}>{errors[\"activityName\"]}</span>\r\n*/\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction TasksSearch( props ){\r\n\r\n  const [ searchText, setSearchText ] = useState( '' );\r\n  const [ results, setResults ] = useState( {} );\r\n\r\n  useEffect( () => {\r\n\r\n    const searchTerm = searchText.toLowerCase();\r\n    const results = props.tasks.filter(\r\n      task => task.name.toLowerCase().includes( searchTerm )\r\n    );\r\n\r\n    setResults( results );\r\n  }, [ searchText ] );\r\n\r\n  const handleChange = (ev) => {\r\n    setSearchText( ev.target.value );\r\n  };\r\n\r\n  return(\r\n    <div className=\"tasks-search\" >\r\n      <h3>Tasks</h3>\r\n      <input type=\"text\" onChange={ handleChange } placeholder=\"Search tasks\"/>\r\n\r\n    <ul className=\"row\">\r\n      {\r\n        results.length > 0\r\n        &&\r\n        results.map( ( task ) =>\r\n        <li className=\"tasks-card\" key={ task.id } >\r\n          <div>\r\n            <div className=\"txt-label\">\r\n            <label>\r\n              { task.date }\r\n            </label>\r\n            <label>\r\n              { task.activityName }\r\n            </label>\r\n            </div>\r\n\r\n            <div className=\"tasks-title\">\r\n              { task.name }\r\n            </div>\r\n            <div className=\"txt-label\">\r\n              Duration: { task.duration } minutes\r\n            </div>\r\n          </div>\r\n        </li>\r\n        )\r\n      }\r\n    </ul>\r\n\r\n    </div>\r\n  ) // return\r\n} // TasksSearch\r\n\r\nexport default TasksSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Tasks( props ) {\r\n\r\n  const [ tasks, setTasks ] = useState( [] );\r\n  const [ errors, setErrors ] = useState( {} );\r\n  const [ errorExists, setErrorExists ] = useState( \"\" );\r\n\r\n  const params = useParams();\r\n\r\n  useEffect( () => {\r\n\r\n    const taskResults = props.tasks.filter(\r\n      task => task.date === params.dateId\r\n    );\r\n\r\n    setTasks( taskResults );\r\n  }, [ params.dateId ] );\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    // console.log( \"Tasks.handleSubmit() clicked\" );\r\n\r\n    let errorFields = [];\r\n    if ( ev.target.taskName.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Task\"]\r\n    }\r\n\r\n    if ( ev.target.duration.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Duration\"]\r\n    }\r\n\r\n    setErrors( errorFields );\r\n\r\n    if ( errorFields.length > 0 ){\r\n      setErrorExists( \"Missing required fields\" );\r\n    } else {\r\n      if ( ev.target.taskName.value.length > 0 && !isNaN( parseInt( ev.target.duration.value ) ) ) {\r\n        console.log(\"adding new tasks\");\r\n        const theData = {\r\n          id: Date.now(),\r\n          activityName: params.query,\r\n          date: params.dateId,\r\n          name: ev.target.taskName.value,\r\n          duration: parseInt(ev.target.duration.value),\r\n          deleted: false\r\n        }\r\n        setErrorExists( \"\" );\r\n        props.setTasks([ ...props.tasks, theData ]);\r\n        setTasks([ ...tasks, theData ]);\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const handleDelete = ( taskId ) => {\r\n    // array of the task selected\r\n    // mutable\r\n    props.tasks.map( task => {\r\n        // console.log(\"task.id == taskId: \", task.id, \":\", task.id === taskId);\r\n        if ( task.id === taskId ){\r\n          task.deleted = !task.deleted;\r\n          task.duration = task.duration * -1;\r\n        }\r\n      } );\r\n\r\n    setTasks( props.tasks.filter( task => task.date === params.dateId ) );\r\n\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"tasks-results-invalid\">\r\n        {\r\n          errorExists.length > 0\r\n          &&\r\n          <p>{ errorExists }:</p>\r\n        }\r\n        <ul>\r\n        {\r\n          errors.length > 0\r\n          &&\r\n            errors.map( (error, index ) =>\r\n              <li key={ index }>{ error }</li>\r\n            )\r\n        }\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n        <label>\r\n          { params.dateId }\r\n          &nbsp;\r\n          { params.query }\r\n        </label>\r\n\r\n        <form onSubmit={ handleSubmit } >\r\n          <input type=\"text\" name=\"taskName\" placeholder=\"Task\" />\r\n          &nbsp;\r\n          <input type=\"text\" name=\"duration\" placeholder=\"Duration in mins\" />\r\n          <button>New</button>\r\n        </form>\r\n      </div>\r\n\r\n      <ul className=\"row\">\r\n        {\r\n          tasks.length > 0\r\n          &&\r\n          tasks.map( (task) =>\r\n            <li className=\"tasks-card\" key={ task.id } >\r\n              <div className=\"tasks-labels\">\r\n                <div className=\"tasks-title\">\r\n                  { task.name }\r\n                </div>\r\n\r\n                <div className=\"txt-label\">\r\n                  Duration: { task.duration } minutes\r\n                  <button onClick={ () => handleDelete(task.id) }>{ task.deleted ? \"+\" : \"-\" }</button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          )\r\n        }\r\n      </ul>\r\n\r\n    </div>\r\n  ) // return\r\n}; // Tasks\r\n\r\nexport default Tasks;\r\n\r\n\r\n// TODO: Task deletion. flag only and recalculate in Activities. Then do styling on deleted/flagged styling. Also change the button + -\r\n","const activitiesData = [\r\n  {\r\n    dateId: '2021-09-20',\r\n    activityName: \"Work\",\r\n    addressFrom: \"Laverton\",\r\n    addressTo: \"Flinders Street Railway Station\",\r\n    departBy: \"8:00\",\r\n    arriveBy: \"9:00\",\r\n    duration: 1234    // seconds\r\n  },\r\n  {\r\n    dateId: '2021-09-25',\r\n    activityName: \"Picnic\",\r\n    addressFrom: \"Laverton\",\r\n    addressTo: \"Wyndham Park\",\r\n    departBy: \"8:00\",\r\n    arriveBy: \"9:00\",\r\n    duration: 1234    // seconds\r\n  }\r\n];\r\n\r\nexport default activitiesData;\r\n","const tasksData = [\r\n  {\r\n    id: 0,\r\n    activityName: \"work\",\r\n    date: \"2021-09-20\",\r\n    name: \"Coffee\",\r\n    duration: 5,\r\n    deleted: false\r\n  },\r\n  {\r\n    id: 1,\r\n    activityName: \"work\",\r\n    date: \"2021-09-20\",\r\n    name: \"Send kid to school\",\r\n    duration: 15,\r\n    deleted: false\r\n  },\r\n  {\r\n    id: 2,\r\n    activityName: \"picnic\",\r\n    date: \"2021-09-26\",\r\n    name: \"Prepare food\",\r\n    duration: 30,\r\n    deleted: false\r\n  }\r\n];\r\n\r\nexport default tasksData;\r\n","import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { useState } from 'react';\n\n// import Home from './Home';\nimport ActivitiesSearch from './ActivitiesSearch';\nimport Activities from './Activities';\nimport TasksSearch from './TasksSearch';\nimport Tasks from './Tasks';\n// import Distance from './Distance';\n\nimport './App.css';\n\nimport activitiesData from './activitiesData';\nimport tasksData from './tasksData';\n\nfunction PageNotFound (props) {\n  return (\n    <div>\n      <h2>Sorry, the page you requested was not found.</h2>\n      Go back to <Link to=\"/\">the home page</Link>\n    </div>\n  )\n}\n\nfunction App() {\n\n  const [ activities, setActivities ] = useState( activitiesData );\n  const [ tasks, setTasks ] = useState( tasksData );\n\n  return (\n\n    <div className=\"App\">\n      <Router basename={ process.env.PUBLIC_URL }>\n        <nav className=\"navbar\">\n          <div className=\"App-logo\">on-the-dot...</div>\n            <ul className=\"nav-link\">\n              <div className=\"menu\">\n                  <li><Link to=\"/\">Home</Link></li>\n                  <li><Link to=\"/activities\">Activities</Link></li>\n                  <li><Link to=\"/tasks\">Tasks</Link></li>\n              </div>\n            </ul>\n\n        </nav>\n\n        <Switch>\n\n          <Route exact path=\"/\"/>\n          <Route exact path=\"/activities\" component={ ActivitiesSearch } />\n          <Route exact path=\"/activities/search/:query\" >\n            <Activities\n              activities={ activities }\n              setActivities={ setActivities }\n              tasks={ tasks }\n            />\n          </Route>\n\n          <Route exact path=\"/tasks\">\n            <TasksSearch\n              tasks={ tasks }\n            />\n          </Route>\n\n          <Route exact path=\"/activities/search/:query/:dateId\">\n            <Tasks\n              tasks={ tasks }\n              setTasks={ setTasks }\n            />\n          </Route>\n\n          <Route path=\"*\" component={ PageNotFound } />\n\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\n// TODO:\n&nbsp; | &nbsp;\n<Link to=\"/distance\">Distance</Link>\n  </Route>\n  <Route exact path=\"/distance\" component={ Distance } />\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/*\n\n*/\n"],"sourceRoot":""}