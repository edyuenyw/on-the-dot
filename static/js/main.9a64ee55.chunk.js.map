{"version":3,"sources":["components/ActivitiesSearch.js","components/Activities.js","components/TasksSearch.js","components/Tasks.js","components/activitiesData.js","components/tasksData.js","components/App.js","reportWebVitals.js","index.js"],"names":["ActivitiesSearch","props","useState","searchText","setSearchText","history","useHistory","className","onSubmit","ev","preventDefault","push","type","onChange","target","value","placeholder","Activities","gmap","setGmap","activities","setActivities","errors","setErrors","errorExists","setErrorExists","invalidDuration","setInvalidDuration","params","useParams","useEffect","results","searchTerm","toLowerCase","activity","filter","a","activityName","length","map","obj","tasksDates","tasks","t","date","dateId","calculateMinutes","reduce","prev","curr","duration","durationMinutes","toMinutes","Number","arriveBy","split","Math","round","hour","floor","minutes","departBy","performSearch","query","minDate","today","Date","dd","getDate","mm","getMonth","getFullYear","onGoogleApiLoaded","maps","bootstrapURLKeys","key","process","defaultCenter","lat","lng","defaultZoom","error","index","errorFields","addressFrom","addressTo","find","d","DistanceMatrixService","getDistanceMatrix","origins","destinations","region","travelMode","TravelMode","DRIVING","response","status","DistanceMatrixStatus","OK","alert","rows","elements","theData","originAddresses","destinationAddresses","handleSubmit","name","min","defaultValue","to","TasksSearch","setResults","task","includes","id","Tasks","setTasks","taskResults","taskName","isNaN","parseInt","now","deleted","onClick","taskId","activitiesData","tasksData","PageNotFound","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a64ee55.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction ActivitiesSearch( props ){\r\n\r\n  const [ searchText, setSearchText ] = useState( '' );\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (ev) => {\r\n    // console.log(\"ActivitiesSearch.handleSubmit() clicked: \", searchText);\r\n    ev.preventDefault();\r\n    history.push(`activities/search/${ searchText }`);\r\n  };\r\n\r\n  const handleChange = (ev) => {\r\n    // console.log(\"ActivitiesSearch.handleChange() clicked.\");\r\n    setSearchText( ev.target.value );\r\n  };\r\n\r\n  return(\r\n    <div className=\"activities-search\">\r\n      <h3>Activities</h3>\r\n      <form onSubmit={ handleSubmit } >\r\n        <input type=\"text\" onChange={ handleChange } placeholder=\"Search activities\"/>\r\n        <button>Search</button>\r\n      </form>\r\n    </div>\r\n  ) // return\r\n} // ActivitiesSearch\r\n\r\nexport default ActivitiesSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nconst GMAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAP_API_KEY;\r\n\r\nfunction Activities( props ) {\r\n\r\n  const [ gmap, setGmap ] = useState( null );\r\n  const [ activities, setActivities ] = useState( [] );\r\n  const [ errors, setErrors ] = useState( {} );\r\n  const [ errorExists, setErrorExists ] = useState( \"\" );\r\n  const [ invalidDuration, setInvalidDuration ] = useState( \"\" );\r\n\r\n  const params = useParams();\r\n\r\n  function performSearch( searchText ) {\r\n    // console.log(\"performSearch: \", props.activities);\r\n    const searchTerm = searchText.toLowerCase();\r\n\r\n    // const searchResults = () => {\r\n      const activity = props.activities.filter( a => a.activityName.toLowerCase() === searchTerm );\r\n      if ( activity.length > 0 ){\r\n        // console.log(\"activity: \", activity);\r\n\r\n        // Sum tasks durations per activity\r\n        activity.map( obj => {\r\n          // console.log(\"props.tasks.filter( t => t.date === obj.dateId ): \", props.tasks.filter( t => t.date === obj.dateId ));\r\n          const tasksDates = props.tasks.filter( t => t.date === obj.dateId && t.activityName.toLowerCase() === searchTerm );\r\n\r\n          if ( tasksDates.length > 0 ){\r\n            // console.log(\"tasksDates: \", tasksDates);\r\n            const calculateMinutes = tasksDates.reduce( (prev, curr) => prev + curr.duration, 0 ); // need to do something here\r\n            const durationMinutes = calculateMinutes < 0 ? 0 : calculateMinutes;\r\n            // console.log(\"durationMinutes: \", durationMinutes, \" and activity.duration: \", ( Math.round( obj.duration / 60 ) ) );\r\n\r\n            const toMinutes = ( Number( obj.arriveBy.split(':')[0] ) * 60 ) +\r\n              Number( obj.arriveBy.split(':')[1] ) -\r\n              ( Math.round( obj.duration / 60 ) ) - durationMinutes ;\r\n\r\n            const hour = Math.floor( toMinutes / 60 );\r\n            const minutes = toMinutes % 60 < 10 ? `0${toMinutes % 60}` : toMinutes % 60;\r\n            obj.departBy = `${hour}:${minutes}`;\r\n          }\r\n        });\r\n      }\r\n      return activity;\r\n    // }\r\n\r\n    // setActivities( searchResults );\r\n  };\r\n\r\n  useEffect( () => {\r\n    // console.log(\"Activities.useEffect() is running handleClick: \", handleClick);\r\n    setErrors( {} );\r\n    setErrorExists( \"\" );\r\n    setActivities( [] );\r\n    setInvalidDuration( \"\" );\r\n\r\n    // performSearch( params.query );\r\n    const results = performSearch( params.query );\r\n    // console.log(results);\r\n    setActivities( results );\r\n\r\n  }, [ params.query ] );\r\n\r\n\r\n  const handleSubmit = (ev) => {\r\n\r\n    const service = new gmap.maps.DistanceMatrixService();\r\n\r\n    service.getDistanceMatrix(\r\n      {\r\n        origins: [ ev.target.addressFrom.value ],\r\n        destinations: [ ev.target.addressTo.value ],\r\n        region: \"AU\",\r\n        travelMode: gmap.maps.TravelMode.DRIVING\r\n      },\r\n      function( response, status ){\r\n        if (status !== gmap.maps.DistanceMatrixStatus.OK) {\r\n          alert('Error was: ' + status);\r\n        }\r\n\r\n        if ( response.rows[0].elements[0].status !== \"OK\" ){ // // TODO:  change to !== 'OK'\r\n          setInvalidDuration( \"Unable to calculate duration due to unknown routes or routes not found.\" )\r\n        } else {\r\n          // console.log( response );\r\n\r\n          const toMinutes = (Number(ev.target.arriveBy.value.split(':')[0]) * 60) +\r\n                            Number(ev.target.arriveBy.value.split(':')[1]) -\r\n                            Math.round( response.rows[0].elements[0].duration.value / 60 );\r\n          const hour = Math.floor( toMinutes / 60 );\r\n          const minutes = toMinutes % 60;\r\n\r\n          const theData = {\r\n            dateId: ev.target.dateId.value,\r\n            activityName: ev.target.activityName.value,\r\n            addressFrom: response.originAddresses[0].split(',')[0],\r\n            addressTo: response.destinationAddresses[0].split(',')[0],\r\n            arriveBy: ev.target.arriveBy.value,\r\n            departBy: `${hour}:${minutes}`,\r\n            duration: response.rows[0].elements[0].duration.value\r\n          };\r\n\r\n          props.setActivities([ ...props.activities, theData ]);\r\n          setActivities([ ...activities, theData ]);\r\n          setInvalidDuration( \"\" );\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  const minDate = () => {\r\n    let today = new Date();\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth()+1;\r\n    let yyyy = today.getFullYear();\r\n\r\n    dd = dd<10 ? '0'+dd : dd;\r\n    mm = mm<10 ? '0'+mm : mm;\r\n\r\n    return today = yyyy + '-' + mm + '-' + dd;\r\n  };\r\n\r\n  const handleValidationSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    let errorFields = [];\r\n    if ( ev.target.activityName.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Activity\"]\r\n    }\r\n\r\n    if ( ev.target.arriveBy.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Arrival Time\"]\r\n    }\r\n\r\n    if ( ev.target.addressFrom.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Address From\"]\r\n    }\r\n\r\n    if ( ev.target.addressTo.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Address To\"]\r\n    }\r\n\r\n    setErrors( errorFields );\r\n\r\n    if ( errorFields.length > 0 ){\r\n      setErrorExists( \"Missing required fields\" );\r\n    } else {\r\n      if ( props.activities.find( d => d.dateId === ev.target.dateId.value &&\r\n        d.activityName.toLowerCase() === ev.target.activityName.value.toLowerCase() ) ){\r\n          setErrorExists( \"Activity exists\" );\r\n          // alert(\"Same activity was found\");\r\n          // return;\r\n        } else{\r\n          setErrorExists( \"\" );\r\n          handleSubmit( ev );\r\n        }\r\n      }\r\n  };\r\n\r\n  return(\r\n    <div>\r\n\r\n      <GoogleMapReact\r\n        onGoogleApiLoaded={ ({map, maps}) => { setGmap({map, maps}) }  /* get the instances of the underlying Gmap objects, needed for adding a Circle later on in performSearch()  */ }\r\n        bootstrapURLKeys={{ key: GMAPS_API_KEY }}\r\n        defaultCenter={ {lat: 19.168802, lng: 99.895430} /* Thailand... why not */ }\r\n        defaultZoom={ 7 }\r\n      >\r\n      </GoogleMapReact>\r\n\r\n      <div className=\"search-results-invalid\">\r\n        {\r\n          errorExists.length > 0\r\n          &&\r\n          <p>{ errorExists }:</p>\r\n        }\r\n        <ul>\r\n        {\r\n          errors.length > 0\r\n          &&\r\n            errors.map( (error, index ) =>\r\n              <li key={ index }>{ error }</li>\r\n            )\r\n        }\r\n        </ul>\r\n        {\r\n          invalidDuration.length > 0 && <p>{ invalidDuration }</p>\r\n        }\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n\r\n        <form onSubmit={ handleValidationSubmit } >\r\n          <input type=\"date\" name=\"dateId\" min={ minDate() } defaultValue={ minDate() } />\r\n          <input type=\"time\" name=\"arriveBy\" placeholder=\"Arrive By (hhmm)\" />\r\n          <input type=\"text\" name=\"activityName\" placeholder=\"Activity\" />\r\n          <input type=\"text\" name=\"addressFrom\" placeholder=\"Address From\" />\r\n          <input type=\"text\" name=\"addressTo\" placeholder=\"Address To\" />\r\n          <button>New</button>\r\n        </form>\r\n\r\n      </div>\r\n\r\n          <ul className=\"row\">\r\n          {\r\n            activities.length > 0\r\n            ?\r\n            activities.map( activity =>\r\n\r\n              <li key={ activity.dateId + activity.activityName }   >\r\n                <Link to={`/activities/search/${ activity.activityName.toLowerCase() }/${ activity.dateId }`} >\r\n                  <div className=\"activities-card\">\r\n                    <label className=\"txt-label\">\r\n                      { activity.dateId }\r\n                    </label>\r\n\r\n                    <label className=\"txt-label-title\">\r\n                      { activity.activityName }\r\n                    </label>\r\n\r\n                    <div className=\"txt-label\">\r\n                      <label>\r\n                        Depart: { activity.addressFrom }\r\n                      </label>\r\n                      <label>\r\n                        Arrive: { activity.addressTo }\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"txt-label\">\r\n                      <label>\r\n                        At: { activity.departBy }\r\n                      </label>\r\n                      <label>\r\n                        At: { activity.arriveBy }\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </li>\r\n            )\r\n            :\r\n            <p>Activity list is empty for '{ params.query }'. Start adding it.</p>\r\n          }\r\n          </ul>\r\n\r\n\r\n    </div>\r\n  ) // return\r\n}; // Activities\r\n\r\nexport default Activities;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction TasksSearch( props ){\r\n\r\n  const [ searchText, setSearchText ] = useState( '' );\r\n  const [ results, setResults ] = useState( {} );\r\n\r\n  useEffect( () => {\r\n\r\n    const searchTerm = searchText.toLowerCase();\r\n    const results = props.tasks.filter(\r\n      task => task.name.toLowerCase().includes( searchTerm )\r\n    );\r\n\r\n    setResults( results );\r\n  }, [ searchText ] );\r\n\r\n  const handleChange = (ev) => {\r\n    setSearchText( ev.target.value );\r\n  };\r\n\r\n  return(\r\n    <div className=\"tasks-search\" >\r\n      <h3>Tasks</h3>\r\n      <input type=\"text\" onChange={ handleChange } placeholder=\"Search tasks\"/>\r\n\r\n    <ul className=\"row\">\r\n      {\r\n        results.length > 0\r\n        &&\r\n        results.map( ( task ) =>\r\n        <li className=\"tasks-card\" key={ task.id } >\r\n          <div>\r\n            <div className=\"txt-label\">\r\n            <label>\r\n              { task.date }\r\n            </label>\r\n            <label>\r\n              { task.activityName }\r\n            </label>\r\n            </div>\r\n\r\n            <div className=\"tasks-title\">\r\n              { task.name }\r\n            </div>\r\n            <div className=\"txt-label\">\r\n              Duration: { task.duration } minutes\r\n            </div>\r\n          </div>\r\n        </li>\r\n        )\r\n      }\r\n    </ul>\r\n\r\n    </div>\r\n  ) // return\r\n} // TasksSearch\r\n\r\nexport default TasksSearch;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Tasks( props ) {\r\n\r\n  const [ tasks, setTasks ] = useState( [] );\r\n  const [ errors, setErrors ] = useState( {} );\r\n  const [ errorExists, setErrorExists ] = useState( \"\" );\r\n\r\n  const params = useParams();\r\n\r\n  useEffect( () => {\r\n    // console.log(props.tasks);\r\n    // console.log(params);\r\n    setTasks( [] );\r\n\r\n    const taskResults = props.tasks.filter( task =>\r\n      task.date === params.dateId && task.activityName.toLowerCase() === params.query.toLowerCase()\r\n    );\r\n\r\n    setTasks( taskResults );\r\n  }, [ params.dateId ] );\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    // console.log( \"Tasks.handleSubmit() clicked\" );\r\n\r\n    let errorFields = [];\r\n    if ( ev.target.taskName.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Task\"]\r\n    }\r\n\r\n    if ( ev.target.duration.value.length <= 0 ){\r\n      errorFields = [ ...errorFields, \"Duration\"]\r\n    }\r\n\r\n    setErrors( errorFields );\r\n\r\n    if ( errorFields.length > 0 ){\r\n      setErrorExists( \"Missing required fields\" );\r\n    } else {\r\n      if ( ev.target.taskName.value.length > 0 && !isNaN( parseInt( ev.target.duration.value ) ) ) {\r\n        // console.log(\"adding new tasks\");\r\n        const theData = {\r\n          id: Date.now(),\r\n          activityName: params.query,\r\n          date: params.dateId,\r\n          name: ev.target.taskName.value,\r\n          duration: parseInt(ev.target.duration.value),\r\n          deleted: false\r\n        }\r\n        setErrorExists( \"\" );\r\n        props.setTasks([ ...props.tasks, theData ]);\r\n        setTasks([ ...tasks, theData ]);\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const handleDelete = ( taskId ) => {\r\n    // array of the task selected\r\n    // mutable\r\n    props.tasks.map( task => {\r\n        // console.log(\"task.id == taskId: \", task.id, \":\", task.id === taskId);\r\n        if ( task.id === taskId ){\r\n          task.deleted = !task.deleted;\r\n          task.duration = task.duration * -1;\r\n        }\r\n      } );\r\n\r\n    setTasks( props.tasks.filter( task => task.date === params.dateId ) );\r\n\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"tasks-results-invalid\">\r\n        {\r\n          errorExists.length > 0\r\n          &&\r\n          <p>{ errorExists }:</p>\r\n        }\r\n        <ul>\r\n        {\r\n          errors.length > 0\r\n          &&\r\n            errors.map( (error, index ) =>\r\n              <li key={ index }>{ error }</li>\r\n            )\r\n        }\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"search-results\">\r\n        <label>\r\n          { params.dateId }\r\n          &nbsp;\r\n          { params.query }\r\n        </label>\r\n\r\n        <form onSubmit={ handleSubmit } >\r\n          <input type=\"text\" name=\"taskName\" placeholder=\"Task\" />\r\n          &nbsp;\r\n          <input type=\"text\" name=\"duration\" placeholder=\"Duration in mins\" />\r\n          <button>New</button>\r\n        </form>\r\n      </div>\r\n\r\n      <ul className=\"row\">\r\n        {\r\n          tasks.length > 0\r\n          ?\r\n          tasks.map( (task) =>\r\n            <li className=\"tasks-card\" key={ task.id } >\r\n              <div className=\"tasks-labels\">\r\n                <div className=\"tasks-title\">\r\n                  { task.name }\r\n                </div>\r\n\r\n                <div className=\"txt-label\">\r\n                  Duration: { task.duration } minutes\r\n                  <button onClick={ () => handleDelete(task.id) }>{ task.deleted ? \"+\" : \"-\" }</button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          )\r\n          :\r\n          <p>Task list is empty for '{ params.query }'. Start adding it.</p>\r\n        }\r\n      </ul>\r\n\r\n    </div>\r\n  ) // return\r\n}; // Tasks\r\n\r\nexport default Tasks;\r\n\r\n\r\n// TODO: Task deletion. flag only and recalculate in Activities. Then do styling on deleted/flagged styling. Also change the button + -\r\n","const activitiesData = [\r\n  {\r\n    dateId: '2021-09-20',\r\n    activityName: \"Work\",\r\n    addressFrom: \"Laverton\",\r\n    addressTo: \"Flinders Street Railway Station\",\r\n    departBy: \"8:00\",\r\n    arriveBy: \"9:00\",\r\n    duration: 1234    // seconds\r\n  },\r\n  {\r\n    dateId: '2021-09-25',\r\n    activityName: \"Picnic\",\r\n    addressFrom: \"Laverton\",\r\n    addressTo: \"Wyndham Park\",\r\n    departBy: \"8:00\",\r\n    arriveBy: \"9:00\",\r\n    duration: 1234    // seconds\r\n  }\r\n];\r\n\r\nexport default activitiesData;\r\n","const tasksData = [\r\n  {\r\n    id: 0,\r\n    activityName: \"work\",\r\n    date: \"2021-09-20\",\r\n    name: \"Coffee\",\r\n    duration: 5,\r\n    deleted: false\r\n  },\r\n  {\r\n    id: 1,\r\n    activityName: \"work\",\r\n    date: \"2021-09-20\",\r\n    name: \"Send kid to school\",\r\n    duration: 15,\r\n    deleted: false\r\n  },\r\n  {\r\n    id: 2,\r\n    activityName: \"picnic\",\r\n    date: \"2021-09-26\",\r\n    name: \"Prepare food\",\r\n    duration: 30,\r\n    deleted: false\r\n  }\r\n];\r\n\r\nexport default tasksData;\r\n","import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { useState } from 'react';\n\n// import Home from './Home';\nimport ActivitiesSearch from './ActivitiesSearch';\nimport Activities from './Activities';\nimport TasksSearch from './TasksSearch';\nimport Tasks from './Tasks';\n// import Distance from './Distance';\n\nimport './App.css';\n\nimport activitiesData from './activitiesData';\nimport tasksData from './tasksData';\n\nfunction PageNotFound (props) {\n  return (\n    <div>\n      <h2>Sorry, the page you requested was not found.</h2>\n      Go back to <Link to=\"/\">the home page</Link>\n    </div>\n  )\n}\n\nfunction App() {\n\n  const [ activities, setActivities ] = useState( activitiesData );\n  const [ tasks, setTasks ] = useState( tasksData );\n\n  return (\n\n    <div className=\"App\">\n      <Router basename={ process.env.PUBLIC_URL }>\n        <nav className=\"navbar\">\n          <div className=\"App-logo\">on-the-dot...</div>\n            <ul className=\"nav-link\">\n              <div className=\"menu\">\n                  <li><Link to=\"/\">Activities</Link></li>\n                  <li><Link to=\"/tasks\">Tasks</Link></li>\n              </div>\n            </ul>\n\n        </nav>\n\n        <Switch>\n\n          <Route exact path=\"/\" component={ ActivitiesSearch } />\n          <Route exact path=\"/activities/search/:query\" >\n            <Activities\n              activities={ activities }\n              setActivities={ setActivities }\n              tasks={ tasks }\n            />\n          </Route>\n\n          <Route exact path=\"/tasks\">\n            <TasksSearch\n              tasks={ tasks }\n            />\n          </Route>\n\n          <Route exact path=\"/activities/search/:query/:dateId\">\n            <Tasks\n              tasks={ tasks }\n              setTasks={ setTasks }\n            />\n          </Route>\n\n          <Route path=\"*\" component={ PageNotFound } />\n\n        </Switch>\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/*\n\n*/\n"],"sourceRoot":""}